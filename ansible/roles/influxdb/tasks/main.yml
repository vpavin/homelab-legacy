---

- name: Execute pre-tasks
  include_tasks: ./pre_tasks.yml

- name: Install InfluxDB packages
  apt:
    name: influxdb2
    state: present

- name: TLS self signed certificate block
  block:
    - name: Create a directory if it does not exist
      file:
        path: "{{ influxdb_pvt_dir }}"
        state: directory
        mode: '0755'

    - name: Generate an OpenSSL private key with the default values (4096 bits, RSA)
      community.crypto.openssl_privatekey:
        path: "{{ influxdb_pvt_dir }}/{{ influxdb_pem }}"

    - name: Create a directory for Certificate signing request if it does not exist
      file:
        path: "{{ influxdb_csr_dir }}"
        state: directory
        mode: '0755'

    - name: Create a directory for Certificates if it does not exist
      file:
        path: "{{ influxdb_certs_dir }}"
        state: directory
        mode: '0755'

    - name: Generate an OpenSSL Certificate Signing Request
      community.crypto.openssl_csr:
        path: "{{ influxdb_csr_dir }}/{{ influxdb_csr }}"
        privatekey_path: "{{ influxdb_pvt_dir }}/{{ influxdb_pem }}"
        common_name: localhost

    - name: Generate a Self Signed OpenSSL certificate
      community.crypto.x509_certificate:
        path: "{{ influxdb_certs_dir }}/{{ influxdb_crt }}"
        privatekey_path: "{{ influxdb_pvt_dir }}/{{ influxdb_pem }}"
        csr_path: "{{ influxdb_csr_dir }}/{{ influxdb_csr }}"
        provider: selfsigned

    - name: Set certificate file permission
      file:
        path: "{{ influxdb_certs_dir }}/{{ influxdb_crt }}"
        owner: influxdb
        group: influxdb
        mode: '0644'

    - name: Set private key permission
      file:
        path: "{{ influxdb_pvt_dir }}/{{ influxdb_pem }}"
        owner: influxdb
        group: influxdb
        mode: '0600'

  when: selfsigned

## influxdb as service
- name: Copy influxdb config file
  template:
    src: "config.yml.j2"
    dest: "/etc/influxdb/config.yml"
    owner: influxdb
    group: influxdb
    mode: '0644'

- name: Copy influxdb  service config
  template:
    src: "influxd.service.j2"
    dest: "{{ influxdb_systemd }}"
    owner: influxdb
    group: influxdb
    mode: '0644'

- name: Start the InfluxDB service
  systemd:
    name: influxdb
    daemon_reload: yes
    state: restarted

- name: Wait for port 8086 to become open on the host after 5 seconds grace period
  wait_for:
    port: 8086
    delay: 5

- name: InfluxDB setup
  command: influx setup --org {{ influxdb_org }} --bucket {{ influxdb_bucket }} --username {{ influxdb_user }} --password {{ influxdb_password }} --force	{% if selfsigned %}--skip-verify{% endif %} --host http://localhost:8086
  ignore_errors: true

- name: Get bucket ID
  command: influx bucket list --name {{ influxdb_bucket }} {% if selfsigned %}--skip-verify{% endif %}
  register: bucket_id

- name: Set a variable
  set_fact:
    myvar: "{{ bucket_id.stdout }}"

- name: Get influx auth list
  command: influx auth list --org {{ influxdb_org }} --user {{ influxdb_user }} --json {% if selfsigned %}--skip-verify{% endif %}
  register: auth_list

- name: Create InfluxDB token
  command: influx auth create --read-buckets --write-buckets --host http://localhost:8086 --json {% if selfsigned %}--skip-verify{% endif %}
  register: token

# This step prints token value that can be used to authenticate influxdb2 API.
- set_fact:
    myvalue: "{{ token.stdout | from_json }}"
- debug:
    var: myvalue

- name: Activate influxdb token
  command: influx auth active --id {{ myvalue.id }} {% if selfsigned %}--skip-verify{% endif %}
